name: CD Pipeline

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  id-token: write
  contents: read
  actions: read

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TF_VAR_subscription_id: ${{secrets.AZURE_SUBSCRIPTION_ID}}
  TF_VAR_foodcore-backend-resource-group: ${{secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME}}
  TF_VAR_foodcore-backend-storage-account: ${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}
  TF_VAR_foodcore-backend-container: ${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}
  TF_VAR_foodcore-backend-infra-key: ${{secrets.FOODCORE_INFRA_BACKEND_AZURE_KEY}}

jobs:
  infra-info:
    runs-on: ubuntu-latest
    outputs:
      azfunc_resource_group_name: ${{ steps.rsgroup.outputs.azfunc_resource_group_name }}
      azfunc_name: ${{ steps.azfunc.outputs.azfunc_name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=${{secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME}}" \
            -backend-config="storage_account_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}" \
            -backend-config="container_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}" \
            -backend-config="key=${{secrets.BACKEND_AZURE_KEY}}"

      # Somente para que o output seja criado
      - name: Terraform Apply Refresh Only
        working-directory: terraform
        run: terraform apply --refresh-only --auto-approve

      - name: Get Resource Group Name from remote state
        id: rsgroup
        working-directory: terraform
        run: echo "azfunc_resource_group_name=$(terraform output -raw azfunc_resource_group_name_from_remote)" >> $GITHUB_OUTPUT

      - name: Get Function App Name from remote state
        id: azfunc
        working-directory: terraform
        run: echo "azfunc_name=$(terraform output -raw azfunc_name_from_remote)" >> $GITHUB_OUTPUT

  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [infra-info]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download artifacts
        uses: dawidd6/action-download-artifact@v11
        with:
          name: functionapp-zip
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ci.yaml
          workflow_search: true
          check_artifacts: true
          name_is_regexp: false
          if_no_artifact_found: fail
          path: azfuncapp

      - name: Get Publish Profile
        run: az functionapp deployment list-publishing-profiles --name ${{ needs.infra-info.outputs.azfunc_name }} --resource-group ${{ needs.infra-info.outputs.azfunc_resource_group_name }} --xml > ./azfuncapp/publishProfile.xml
        id: get-publish-profile

      - name: Deploy Azure Function
        uses: azure/functions-action@v1
        with:
          app-name: ${{ needs.infra-info.outputs.azfunc_name }}
          package: ./azfuncapp/functionapp.zip
          publish-profile: ./azfuncapp/publishProfile.xml