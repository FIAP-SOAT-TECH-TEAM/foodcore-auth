name: CI Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

permissions:
  id-token: write
  contents: read
  actions: read

defaults:
  run:
    working-directory: ./function/FoodcoreAuth

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Setup Azure Functions Core Tools
        run: npm install -g azure-functions-core-tools@4 --unsafe-perm true

      - name: Dependencies Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish Function
        run: dotnet publish --configuration Release --output ./publish

      - name: Zip package
        run: |
          cd publish
          zip -r ../functionapp.zip .

      - name: Generate OpenApi File
        run: |
          cat <<EOF > .env
          AWS_CREDENTIALS="[default]
          aws_access_key_id=EXAMPLE
          aws_secret_access_key=EXAMPLE
          aws_session_token=EXAMPLE"
          
          AWS_REGION=EXAMPLE
          
          COGNITO_USER_POOL_ID=EXAMPLE
          COGNITO_APP_CLIENT_ID=EXAMPLE
          
          DEFAULT_CUSTOMER_PASSWORD=EXAMPLE
          EOF

          export FUNCTIONS_WORKER_RUNTIME=dotnet-isolated
          func start --port 7025 & sleep 10
          curl -o openapi.json http://localhost:7025/api/openapi/v3.json
          
      - name: Upload Function App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: functionapp-zip
          path: ./function/FoodcoreAuth/functionapp.zip
      
      - name: Upload OpenApi File Artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi
          path: ./function/FoodcoreAuth/openapi.json

  terraform:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_VAR_subscription_id: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      TF_VAR_foodcore-backend-resource-group: ${{secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME}}
      TF_VAR_foodcore-backend-storage-account: ${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}
      TF_VAR_foodcore-backend-container: ${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}
      TF_VAR_foodcore-backend-infra-key: ${{secrets.FOODCORE_INFRA_BACKEND_AZURE_KEY}}
      TF_VAR_swagger_path: "./openapi/openapi.json"

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Download artifacts - OpenApi File
        uses: actions/download-artifact@v4
        with:
          name: openapi
          path: ./terraform/openapi

      - name: Terraform Fmt
        id: fmt
        run: terraform fmt

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME}}" \
            -backend-config="storage_account_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}" \
            -backend-config="container_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}" \
            -backend-config="key=${{secrets.BACKEND_AZURE_KEY}}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/tfplan